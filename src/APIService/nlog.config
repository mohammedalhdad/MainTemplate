<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      throwConfigExceptions="true"
      internalLogLevel="info"
      internalLogFile="C:\temp\CleanArchitecture\internal-nlog.txt">



  <!-- enable asp.net core layout renderers -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>



  <!-- optional, add some variables -->
  <!--Must be small latter-->
  <variable name="serviceName" value="clean_architecture"/> 
  
  <variable name="myLevel" value="Warn"/>
  <variable name="logDirectory" value="C:\temp\${serviceName}"/>


  <variable name="jsonDefaultLayout">
    <layout type="JsonLayout">
      <attribute name="date" layout="${longdate}" />
      <attribute name="level" layout="${uppercase:${level}}" />
      <attribute name="id" layout="${aspnet-TraceIdentifier}" />
      <attribute name="guid" layout="${guid}" />
      <attribute name="logger" layout="${logger}" />
      <attribute name="ip" layout="${aspnet-Request-Ip}" />
      <attribute name="response-code" layout="${aspnet-response-statuscode}" />
      <attribute name="url" layout="${aspnet-request-url:IncludePort=true:IncludeQueryString=true}" />
      <attribute name="body" layout="${aspnet-request-posted-body}" />
      <attribute name="log_message" layout="${message:withException=true}"/>
      <attribute name="eventProperties" encode="false" >
        <layout type='JsonLayout' includeAllProperties="true"  maxRecursionLimit="2"/>
      </attribute>

    </layout>
  </variable>

  <variable name="defaultLayout"
            value = "${longdate}|${uppercase:${level}}|Id:${aspnet-TraceIdentifier}|Guid:${guid}|Logger:${logger}|${aspnet-Request-Ip}|Response-code:${aspnet-response-statuscode}|${aspnet-request-url:IncludePort=true:IncludeQueryString=true}|Body:${aspnet-request-posted-body}|Message:${message:withException=false}|Properties:${all-event-properties}|Exception:${exception:format=@}"
            />



  <targets async="true">




    <!--<target name="logstashTcp" xsi:type="Network"
            address="tcp://localhost:5044"
            layout="${jsonDefaultLayout}" />-->


    <!--will add from api-->
    <target xsi:type="WebService" name="logstash"
            url="http://127.0.0.1:5045"
            protocol="JsonPost"
            encoding="UTF-8">

      <parameter name="service" layout="${serviceName}" />
      <parameter name="datetime" layout="${longdate}" />
      <parameter name="level" layout="${uppercase:${level}}" />
      <parameter name="logger" layout="${logger}" />
      <parameter name="guid" layout="${guid}" />
      <parameter name="id" layout="${aspnet-TraceIdentifier}" />
      <parameter name="ip" layout="${aspnet-Request-Ip}" />
      <parameter name="response-code" layout="${aspnet-response-statuscode}" />
      <parameter name="url" layout="${aspnet-request-url:IncludePort=true:IncludeQueryString=true}" />
      <parameter name="body" layout="${aspnet-request-posted-body}" />
      <parameter name="log_message" layout="${message}" />
      <parameter name="exception" layout="${exception:format=tostring}" />
      <parameter name="exception-type" layout="${exception:format=Type}" />
    </target>





    <target xsi:type="File" name="AllLogs"
        fileName="${logDirectory}\All.log"
        layout="${jsonDefaultLayout}"
        archiveFileName="${logDirectory}\archives\All.{#}.log"
        archiveAboveSize="10485760"
        maxArchiveFiles="7"
        archiveNumbering="Rolling"
        concurrentWrites="true"
        keepFileOpen="false"/>



    <target xsi:type="File" name="LogByLevel"
        fileName="${logDirectory}\${level}.log"
        layout="${jsonDefaultLayout}"
        archiveFileName="${logDirectory}\archives\${level}.{#}.log"
        archiveAboveSize="10485760"
        maxArchiveFiles="7"
        archiveNumbering="Rolling"
        concurrentWrites="true"
        keepFileOpen="false"/>


  </targets>




  <!-- Define rules -->
  <rules>
    <logger name="*" minlevel="${var:myLevel}" writeTo="AllLogs,LogByLevel,logstash" />
    <logger ruleName="logstash" name="*" minlevel="Trace" writeTo="" />
  </rules>
</nlog>